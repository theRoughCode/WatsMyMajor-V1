<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>WatsMyMajor - Course Selection</title>
  <link rel="icon" href="/public/images/favicon.ico">
  <link rel="stylesheet" type="text/css" href="./stylesheets/style.css">
</head>
<body>
  <h1 id="title">WatsMyMajor</h1>
  <form class="search-form">
    <input type="text" class="search" placeholder="Course or Subject">
    <ul class="suggestions">
      <li>Filter for a course</li>
      <li>or a subject</li>
    </ul>
  </form>
  <p id="credit"><small>Created by Raphael Koh for the University of Waterloo</small></p>

  <script>
    const filepath = "./data.json";
    var courses = [];

    function loadJSON(callback) {
      var xfile = new XMLHttpRequest();
      xfile.overrideMimeType("application/json");  //forces string to be parsed as text
      xfile.open('GET', filepath, true);
      // this is called once file is ready
      xfile.onreadystatechange = function () {
        if (xfile.readyState == 4 && xfile.status == "200") {
          // .open will NOT return a value but simply returns undefined in async mode so use a callback
          callback(xfile.responseText);
        }
      }
      xfile.send(null);
    }

    loadJSON(response => courses = JSON.parse(response));

    function findMatches(word){
      return courses.filter(course => {
        const regex = new RegExp(word, 'gi');
        const course_title = course.subject + " " + course.catalog_number;
        const course_title_no_space = course.subject + course.catalog_number;
        return course_title.match(regex) || course_title_no_space.match(regex);
      })
    }

    // Updates list to display query
    function displayMatches(){
      if (this.value == "") {
        suggestions.classList.remove("active");
        suggestions.innerHTML = `
          <li>Filter for a course</li>
          <li>or a subject</li>
          `;
        return;
      }
      const matchArray = findMatches(this.value).sort();
      const html = matchArray.map(course => {
        const regex = new RegExp(this.value, 'gi');
        const subject = course.subject;
        const catalog_number = course.catalog_number;
        var course_title = course.subject + " " + course.catalog_number;
        course_title = course_title.replace(regex, `<span class="hl">${this.value.toUpperCase()}</span>`);
        return `<li><span class="name" data-subject=${subject} data-number=${catalog_number}>${course_title}</span></li>`
      }).join('');
      suggestions.classList.add("active");
      suggestions.innerHTML = html;
    }

    // User presses Enter
    function submitSearch(e) {
      e.preventDefault();
      const result = suggestions.querySelector('li');
      // if no search results
      if (!result) return;
      const [subject, number] = result.textContent.split(' ');
      const url_redirect = `wat/${subject}/${number}`;
      window.location.href = url_redirect;
    }

    // Select Course from dropdown list
    function selectMatch (e) {
      if(!suggestions.classList.contains("active")) return;
      const subject = e.target.dataset.subject;
      const number = e.target.dataset.number;
      const url_redirect = `wat/${subject}/${number}`;
      window.location.href = url_redirect;
    }


    const searchInput = document.querySelector('.search');
    const suggestions = document.querySelector('.suggestions');
    const search = document.querySelector('.search-form');

    searchInput.addEventListener('keyup', displayMatches);
    suggestions.addEventListener('click', selectMatch);
    search.addEventListener('submit', submitSearch);
  </script>
</body>
</html>
